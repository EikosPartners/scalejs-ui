{"version":3,"sources":["../../../src/action/actions/event.js"],"names":[],"mappings":";;AAAA;;;;AACA;;AACA;;;;AAEA;;;;;AAGA,IAAM,SAAS,mBAAG,MAAlB;AAAA,IACM,QAAQ,kBAAQ,MAAR,CAAe,KAD7B;;AAGA,SAAS,KAAT,CAAe,OAAf,EAAwB;AACpB,QAAI,OAAO,OAAO,QAAQ,KAAK,IAApB,CAAX;;;;;;AAMA,QAAI,QAAQ,SAAZ,EAAuB;AACnB,gBAAQ,MAAR,GAAiB,MAAM,QAAQ,MAAR,IAAkB,EAAxB,EAA4B,QAAQ,QAAQ,SAAhB,CAA5B,CAAjB;AACH;;AAED,0BAAO,OAAO,QAAQ,MAAf,CAAP,EAA+B,QAAQ,MAAvC;;;;;AAKH;;AAED,mCAAgB,EAAC,YAAD,EAAhB","file":"event.js","sourcesContent":["import sandbox from 'scalejs.sandbox';\nimport { notify } from 'scalejs.messagebus';\nimport ko from 'knockout';\n\nimport { registerActions } from '../actionModule';\n\n//imports\nconst unwrap = ko.unwrap,\n      merge = sandbox.object.merge;\n\nfunction event(options) {\n    let data = unwrap(this && this.data);\n\n    // if (options.before) {\n    //     invoke(options.before, {}, options.beforeOptions);\n    // }\n\n    if (options.paramsKey) {\n        options.params = merge(options.params || {}, options[options.paramsKey]);\n    }\n\n    notify(unwrap(options.target), options.params);\n\n    // if (options.after) {\n    //     invoke(options.after, {}, options.afterOptions);\n    // }\n}\n\nregisterActions({event});\n\n"]}