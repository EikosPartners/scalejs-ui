{"version":3,"sources":["../../../src/action/actions/ajax.js"],"names":[],"mappings":"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","file":"ajax.js","sourcesContent":["import sandbox from 'scalejs.sandbox';\nimport { createViewModel } from 'scalejs.mvvm';\nimport mustache from 'mustache';\nimport _ from 'lodash';\nimport dataservice from 'dataservice';\n\nimport { registerActions } from '../actionModule';\n\nconst has = sandbox.object.has,\n      get = sandbox.object.get,\n      merge = _.merge,\n      is = sandbox.type.is;\n\nfunction ajax(options, args) {\n    let data = this.data && this.data(),\n        target = options.target,\n        optionData = options.data || {},\n        uri = mustache.render(options.target.uri, merge(data, optionData)),\n        sendAllData = get(options, 'target.options.type') === 'POST' || get(options, 'target.options.type') === 'PUT' && !target.data,\n        contextValue,\n        context = this,\n        callback = args && args.callback,\n        nextAction;\n\n    if (sendAllData) {\n        target.data = this.data();\n    } else if (Array.isArray(options.sendDataKeys)) {\n        target.data = options.sendDataKeys.reduce(function(o, k) {\n            let receiverKey = k, supplierKey = k, value;\n            if(is(k, 'object')) {\n                Object.keys(k).forEach(function (key) {\n                    receiverKey = key;\n                    supplierKey = k[key];\n                });\n            }\n\n            if(!has(data[supplierKey])) {\n                console.warn('Data key missing from data', supplierKey);\n                o[receiverKey] = null;\n                return o;\n            }\n\n            value = data[supplierKey];\n            if(typeof value === 'string') { value = value.trim(); }\n            o[receiverKey] = value;\n            return o;\n        }, {});\n    } else {\n        target.data = target.data || {};\n    }\n\n    nextAction =  function (error, results) {\n        let opts = options ? _.cloneDeep(options) : {},\n            err = error ? results : null; // handle 200ok but still an error\n\n        ((err ? opts.errorActions : opts.nextActions) || []).forEach(function (item) {\n            // ROB & DRAISY - overwrite the errorAction's message with message from server\n            // todo: revisit and refactor.\n            if (err && opts.errorActions){\n                opts.errorActions.forEach(function(errorAction){\n                    if (errorAction.options.message && error.message) {\n                        errorAction.options.message = error.message;\n                    }\n                });\n            }\n\n            // get the results of the request and push\n            let response = {\n                request: options.target,\n                error: error,\n                results: results\n            };\n\n            item.options = merge(response, item.options);\n            let createViewModel = sandbox.metadataFactory.createViewModel.bind(context);\n            createViewModel(item).action();\n        });\n\n        if (callback) {\n            callback.apply(null, arguments);\n        }\n    };\n\n    dataservice.ajax(merge(target, { uri: uri }), nextAction);\n}\n\nregisterActions({ajax});"]}