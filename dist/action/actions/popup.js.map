{"version":3,"sources":["../../../src/action/actions/popup.js"],"names":[],"mappings":";;AAAA;;AACA;;;;AACA;;AACA;;;;AAEA;;;;AAEA,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAC1B,QAAI,UAAU,IAAd;AAAA,QACI,oBADJ;AAAA,QACiB,gBADjB;AAAA,QAC0B,aAD1B;AAAA,QACgC,cADhC;AAAA,QACuC,eADvC;AAAA,QAC+C,UAAU,EADzD;;AAGA,cAAU,CAAC,QAAQ,OAAR,IAAmB,EAApB,EAAwB,GAAxB,CAA4B,UAAU,MAAV,EAAkB;AACpD,eAAO,IAAP,GAAc,QAAd;AACA,eAAO,yBAAgB,IAAhB,CAAqB,OAArB,EAA8B,MAA9B,CAAP;AACH,KAHS,CAAV;;AAKA,WAAO,QAAQ,KAAK,IAAb,IAAqB,KAAK,IAAL,EAA5B;AACA,YAAQ,IAAR,GAAe,IAAf;;AAEA,QAAI,QAAQ,QAAQ,OAApB,EAA6B;AAAA;AACzB,gBAAI,CAAC,MAAM,OAAN,CAAc,IAAd,CAAL,EAA0B;AAAE,uBAAO,CAAC,IAAD,CAAP;AAAe;;;AAG3C,gBAAI,gBAAgB,QAAQ,OAAR,CAAgB,KAAhB,CAAsB,6BAAtB,CAApB;AACA,gBAAI,aAAJ,EAAmB;AACf,wBAAQ,IAAR,CAAa,qEAAb,EAAoF,OAApF;;;AAGA,wBAAQ,OAAR,GAAkB,QAAQ,OAAR,CAAgB,OAAhB,CAAwB,cAAc,CAAd,CAAxB,EAA0C,mBAA1C,CAAlB;;;AAGA,gCAAgB,cAAc,GAAd,CAAkB,UAAU,IAAV,EAAgB;AAC9C,2BAAO,KAAK,KAAL,CAAW,KAAK,OAAL,CAAa,GAAb,IAAoB,CAA/B,EAAkC,CAAC,CAAnC,CAAP;AACH,iBAFe,EAEb,IAFa,GAEN,KAFM,CAEA,GAFA,CAAhB;;;AAKA,wBAAQ,aAAR,GAAwB,KAAK,GAAL,CAAS,UAAU,KAAV,EAAiB;AAC9C,2BAAO,cAAc,MAAd,CAAqB,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AAC9C,+BAAO,OAAO,MAAM,IAAN,CAAP,GAAqB,GAA5B;AACH,qBAFM,EAEJ,EAFI,CAAP;AAGH,iBAJuB,CAAxB;AAKH;;AAED,oBAAQ,OAAR,GAAkB,mBAAS,MAAT,CAAgB,QAAQ,OAAxB,EAAiC,OAAjC,CAAlB;AAxByB;AA0B5B,KA1BD,MA0BO,IAAI,CAAC,QAAQ,OAAb,EAAsB;AACzB,gBAAQ,OAAR,GAAkB,EAAlB;AACH;;AAED,QAAI,QAAQ,eAAZ,EAA6B;AACzB,sBAAc,yBAAgB,IAAhB,CAAqB,OAArB,EAA8B,QAAQ,eAAtC,EAAuD,MAArE;AACH;;AAED,YAAS,OAAO,QAAQ,KAAf,KAAyB,WAAzB,IAAwC,OAAO,QAAQ,KAAf,KAAyB,SAAjE,GAA6E,QAAQ,KAArF,GAA6F,SAAS,QAAQ,KAAjB,EAAwB,KAAK,QAA7B,CAAtG;AACA,aAAU,MAAM,OAAN,EAAe;AACrB,eAAO,QAAQ,KADM;AAErB,iBAAS,QAAQ,OAFI;AAGrB,kBAAU,QAAQ,QAHG;AAIrB,iBAAS,OAJY;AAKrB,eAAO,KALc;AAMrB,iBAAS,QAAQ,QANI;AAOrB,qBAAa,WAPQ;AAQrB,iBAAS;AARY,KAAf,CAAV;;AAWA,0BAAO,WAAP,EAAmB,MAAnB;;AAEA,QAAG,QAAQ,SAAX,EAAsB;AAClB,mBAAW,UAAX,EAAuB,QAAQ,SAA/B;AACH;AACJ;;AAEA,SAAS,UAAT,GAAqB;AAClB,sBAAM,SAAN;AACH;;AAED,mCAAgB,EAAC,OAAO,WAAR,EAAqB,sBAArB,EAAhB","file":"popup.js","sourcesContent":["import { createViewModel } from 'scalejs.metadataFactory';\nimport popup from 'scalejs.popup';\nimport { notify } from 'scalejs.messagebus';\nimport mustache from 'mustache';\n\nimport { registerActions } from '../actionModule';\n\nfunction popupAction(options) {\n    let context = this,\n        onHidePopup, actions, data, modal, merged, message = {};\n\n    actions = (options.actions || []).map(function (action) {\n        action.type = 'action';\n        return createViewModel.call(context, action);\n    });\n\n    data = this && this.data && this.data();\n    message.data = data;\n\n    if (data && options.message) {\n        if (!Array.isArray(data)) { data = [data] }\n\n        // check for selected items with unique ids in message\n        let selectedItems = options.message.match(/{{(selectedItems:[^{}]+)}}/g);\n        if (selectedItems) {\n            console.warn('Please refactor selected items message rendering out of popupAction', options);\n\n            // replace {{selectedItems:[uniqueID]}} with {{selectedItems}} for mustache rendering key\n            options.message = options.message.replace(selectedItems[0], '{{selectedItems}}');\n\n            // create array of unique ids for selected values, ie [\"poolNum\", \"PoolStatusCode\"]\n            selectedItems = selectedItems.map(function (item) {\n                return item.slice(item.indexOf(':') + 1, -2);\n            }).join().split(',');\n\n            // add data values to selectedItems key for rendering\n            message.selectedItems = data.map(function (datum) {\n                return selectedItems.reduce(function (prev, curr) {\n                    return prev + datum[curr] + ' ';\n                }, '');\n            });\n        }\n\n        options.message = mustache.render(options.message, message);\n\n    } else if (!options.message) {\n        options.message = '';\n    }\n\n    if (options.hidePopupAction) {\n        onHidePopup = createViewModel.call(context, options.hidePopupAction).action;\n    }\n\n    modal =  typeof options.modal === 'undefined' || typeof options.modal === 'boolean' ? options.modal : evaluate(options.modal, this.getValue);\n    merged =  merge(options, {\n        title: options.title,\n        message: options.message,\n        template: options.template,\n        actions: actions,\n        modal: modal,\n        options: options.children,\n        onHidePopup: onHidePopup,\n        context: this\n    });\n\n    notify('showPopup',merged);\n\n    if(options.hideDelay) {\n        setTimeout(closePopup, options.hideDelay);\n    }\n}\n\n function closePopup(){\n    popup.hidePopup();\n}\n\nregisterActions({popup: popupAction, closePopup});\n"]}