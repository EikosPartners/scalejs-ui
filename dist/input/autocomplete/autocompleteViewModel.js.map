{"version":3,"sources":["../../../src/input/autocomplete/autocompleteViewModel.js"],"names":[],"mappings":"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","file":"autocompleteViewModel.js","sourcesContent":["import { observable, observableArray, computed, unwrap } from 'knockout';\nimport { createViewModels as createViewModelsUnbound } from 'scalejs.metadataFactory';\nimport { evaluate } from 'scalejs.expression-jsep';\nimport { merge, has, is } from 'scalejs';\nimport dataservice from 'dataservice';\nimport _ from 'lodash';\n\n    export default function autocompleteViewModel(node, inputViewModel) {\n        var context = this,\n            dataSourceEndpoint = node.dataSourceEndpoint,\n            keyMap = node.keyMap || {},\n            createViewModels = createViewModelsUnbound.bind(this),\n            // inputViewModel\n            inputValue = inputViewModel.inputValue,\n            subs = inputViewModel.subs,\n            mapItem = inputViewModel.mapItem,\n            hasFocus = inputViewModel.hasFocus,\n            readonly = inputViewModel.readonly,\n            isShown = inputViewModel.isShown,\n            // props\n            autocompleteSource = observableArray(),\n            mappedChildNodes = observableArray(),\n            sourceArray,\n            validations,\n            options = node.options || {},\n            unique = options.unique,\n            computedSource,\n            itemMapper = mapItem(keyMap),\n            objectValue;\n\n        function getValue() {\n            var item;\n            if (mappedChildNodes() && mappedChildNodes().length) {\n                //collect data from each node\n                //note: works well for multi input children..\n                return mappedChildNodes().reduce(function(obj, childNode) {\n                    return merge(obj, childNode.getValue && childNode.getValue());\n                }, {})\n            }\n            if (node.children) {\n                if (has(inputValue()) && inputValue() !== '') {\n                    item = _.find(autocompleteSource(), {value: inputValue() });\n                    if (item) { return item.original}\n                    return objectValue;\n                    console.warn('Cant find value: ' + inputValue() + ' in autocompleteSource in node', node);\n                } else {\n                    return null;\n                }\n\n            }\n            //ret[keyMap.valueKey] = inputValue();\n            return inputValue();\n        }\n\n        function setValue(data) {\n            var value = is(data, 'object') && has(data.value) ? data.value : data,\n                d;\n            if(is(value, 'object')) {\n                var label = (Array.isArray(keyMap.textKey) ? keyMap.textKey : [keyMap.textKey]).map(function(k) {\n                        return value[k];\n                    }).join(keyMap.delimiter || ' / ');\n                inputValue(label);\n\n                objectValue = value;\n\n                if(!value[options.autocompleteId] && !_.find(autocompleteSource(), {value: inputValue() }) ) {\n                    mappedChildNodes(createViewModels(node.children));\n                    // todo: Refacctor because assuming too much about children, not generic enough\n                    mappedChildNodes().forEach(function(child) {\n                        child.mappedChildNodes.forEach(function(childNode) {\n                            if(childNode.setValue && childNode.id) {\n                                childNode.setValue(value[childNode.id]);\n                            }\n                        });\n                    });\n                }\n                return;\n            }\n            inputValue(value);\n        }\n\n        function mapAutocompleteSource(source) {\n            return source.map(function(src) {\n                if (typeof src === 'string') {\n                    return {\n                        value: src,\n                        label: src\n                    }\n                } else {\n                    return src;\n                }\n            });\n        }\n\n        function getAutocompleteSource() {\n            var contextData,\n                contextDataObject = {};\n\n            if (dataSourceEndpoint.data && dataSourceEndpoint.data.fromContext) {\n                contextData = context.getValue(dataSourceEndpoint.data.fromContext);\n                if (contextData === '') {\n                    autocompleteSource([]);\n                    inputValue('');\n                    return;\n                }\n                contextDataObject[dataSourceEndpoint.data.fromContext] = contextData;\n                dataSourceEndpoint.data = merge(dataSourceEndpoint.data, contextDataObject);\n            }\n            dataservice.ajax(dataSourceEndpoint, function(error, data) {\n                if (error) {\n                    console.error('Data retrieval failure', error);\n                    return;\n                }\n                if (keyMap.dataKey) {\n                    sourceArray  =  data[keyMap.dataKey];\n                    // todo: update to use mapItem\n                    var mappedData = data[keyMap.dataKey].map(function(d) {\n                        return keyMap.textKey && keyMap.valueKey ?\n                            {\n                                label: (Array.isArray(keyMap.textKey) ? keyMap.textKey : [keyMap.textKey]).map(function(k) {\n                                    return d[k];\n                                }).join(keyMap.delimiter || ' / '),\n                                value: d[keyMap.valueKey]\n                            }\n                            : d[node.id]; //todo: remove this and add mapping!\n                    })\n                    autocompleteSource(mapAutocompleteSource(_.uniqBy(mappedData, function(item) {\n                            return item ?  has(item, 'value') ? item.value : item : '';\n                    }).filter(Boolean))) // remove empty values\n                } else {\n                    sourceArray = data.SearchResults;\n                    autocompleteSource(mapAutocompleteSource(data.SearchResults));\n                }\n            });\n        }\n\n        function getAutocompleteSourceFromContext() {\n            var source = evaluate(node.autocompleteSource.fromArray, context.getValue);\n\n            // storing source array before any mapping\n            sourceArray = source;\n            if (Array.isArray(source)) {\n                autocompleteSource(\n                    _.uniqBy(\n                        source\n                            .map(itemMapper)\n                            //todo: remove additional mapping - using binding options\n                            .map(function(item) {\n                                return {\n                                    label: item.text,\n                                    value: item.value,\n                                    original: item.original\n                                };\n                            }),\n                        function(item) {\n                            return item.value;\n                        }\n                    )\n                );\n            }\n        }\n\n        function childSetReadonly(mappedNodes) {\n            var nodes = unwrap(mappedNodes);\n            nodes.forEach(function (child) {\n                if (child.setReadonly) {\n                    child.setReadonly(readonly());\n                } else if (child.mappedChildNodes) {\n                    childSetReadonly(child.mappedChildNodes);\n                }\n            })\n        }\n\n        function setReadonly(bool) {\n            readonly(bool);\n            childSetReadonly(mappedChildNodes);\n        }\n\n        function validateChildNodes(childNodes) {\n            return unwrap(childNodes).reduce(function (isInvalid, curr) {\n                if (curr.validate && typeof curr.validate === 'function') {\n                    return curr.validate() || isInvalid;\n                } else {\n                    return validateChildNodes(curr.mappedChildNodes || []) || isInvalid;\n                }\n            }, false);\n        }\n        // validates the input by setting isModified to true\n        // returns true if the input has an error\n        function validate() {\n            inputValue.isModified(true);\n            if(mappedChildNodes().length) {\n                return validateChildNodes(mappedChildNodes);\n            }\n            return !inputValue.isValid() && isShown() && this.rendered() && inputValue.severity() === 1;\n        }\n\n        if (dataSourceEndpoint) {\n            subs.push(computed(getAutocompleteSource));\n        }\n\n        if (Array.isArray(node.autocompleteSource)) {\n            sourceArray = node.autocompleteSource;\n            autocompleteSource(mapAutocompleteSource(node.autocompleteSource));\n        }\n\n        if (node.autocompleteSource && !Array.isArray(node.autocompleteSource)) {\n            subs.push(computed(getAutocompleteSourceFromContext).extend({ deferred: true }));\n        }\n\n        if (!options.addNew) {\n            validations = _.cloneDeep(options.validations) || {};\n            if (!validations || !validations.autocomplete ) {\n                validations.autocomplete = {\n                    message: 'Please choose a valid selection from the options.',\n                    params: autocompleteSource\n                }\n            } else {\n                validations.autocomplete = {\n                    message: validations.autocomplete.message || 'Please choose a valid selection from the options.',\n                    params: autocompleteSource\n                }\n            }\n        }\n\n        if (unique) {\n\n            inputValue.subscribe(function (oldValue) {\n                context.unique[node.id].remove(oldValue);\n            }, null, 'beforeChange');\n            inputValue.subscribe(function (newValue) {\n                if(context.deleteFlag && context.deleteFlag()) { return; }\n                context.unique[node.id].push(newValue);\n            });\n\n            if(context.deleteFlag) {\n                context.deleteFlag.subscribe(function(deleted) {\n                    if (deleted) {\n                        context.unique[node.id].remove(inputValue());\n                    }\n                });\n            }\n\n            computedSource = computed({\n                read: function () {\n                    var selectedItems = _.difference(context.unique[node.id](), [inputValue()]).map(function (item) {\n                            return {\n                                value: item\n                            };\n                        }),\n                        newSource = _.differenceBy(autocompleteSource(), selectedItems, 'value');\n                    return newSource;\n                },\n                write: function (newValues) {\n                    autocompleteSource(newValues);\n                }\n            }).extend({ deferred: true });\n        }\n\n        inputValue.subscribe(function(value) {\n            if (value === 'new' && node.children) {\n                var multi = createViewModels(node.children);\n                // todo - this is very hardcoded, fix\n                multi[0].isVisible(true);\n                multi[0].mappedChildNodes[0].hasFocus && multi[0].mappedChildNodes[0].hasFocus(true);\n                mappedChildNodes(multi);\n            }\n        });\n\n        if(node.children) {\n            subs.push(computed(function () {\n                if(mappedChildNodes().length) {\n                    //todo - refactor this so that we arent making so many assumptions..?\n                    inputValue(\n                        itemMapper(\n                            mappedChildNodes()[0].getValue()\n                        ).value\n                    );\n                }\n            }));\n        }\n\n        return {\n            autocompleteSource: unique ? computedSource : autocompleteSource,\n            mappedChildNodes: mappedChildNodes,\n            getValue: node.children ? getValue : null,\n            setValue: node.children ? setValue : null,\n            validations: validations,\n            validate: node.children ? validate : undefined,\n            setReadonly: setReadonly,\n            dispose: function () {\n                if(unique) {\n                    context.unique[node.id].remove(inputValue());\n                }\n            }\n        }\n    };\n\n"]}